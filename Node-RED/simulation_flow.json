[
    {
        "id": "4e6f89cca2b81b4f",
        "type": "tab",
        "label": "Simulation Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ba493333d0f4a089",
        "type": "function",
        "z": "4e6f89cca2b81b4f",
        "name": "Extract Simulation Temp",
        "func": "// Extract the temperature from the payload\nmsg.payload = msg.payload.temperature;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "f5790b26ff4d682e"
            ]
        ]
    },
    {
        "id": "e5e09714b37c0370",
        "type": "function",
        "z": "4e6f89cca2b81b4f",
        "name": "Extract Simulation Hum",
        "func": "// Extract the humidity from the payload\nmsg.payload = msg.payload.humidity;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "3a9b6ef8ab75728c"
            ]
        ]
    },
    {
        "id": "df7e7d21f90edc70",
        "type": "mqtt in",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "topic": "home/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac1ec762555769ad",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "ba493333d0f4a089",
                "e5e09714b37c0370"
            ]
        ]
    },
    {
        "id": "f5790b26ff4d682e",
        "type": "ui_gauge",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 2,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Home Temperature",
        "label": "Celcius",
        "format": "{{value}}°C",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "3a9b6ef8ab75728c",
        "type": "ui_gauge",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 8,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Home Humidity",
        "label": "Percentage",
        "format": "{{value}}%",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "ac7bfc9f155132e8",
        "type": "http request",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/LIverpool?unitGroup=uk&include=hours%2Cdays%2Ccurrent%2Cevents&key=QLCGU5SZTNBG48WCDFPSSWDWR&contentType=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 500,
        "wires": [
            [
                "e45c19e9f6dee2a3",
                "cdf1ba1f84cd0f0c"
            ]
        ]
    },
    {
        "id": "e45c19e9f6dee2a3",
        "type": "function",
        "z": "4e6f89cca2b81b4f",
        "name": "Get Outside Temp",
        "func": "// Extract the temperature from the payload\nif (msg.payload && msg.payload.days && msg.payload.days.length > 0) {\n    const todayWeather = msg.payload.days[0];\n    msg.payload = todayWeather.temp + \" °C\";\n} else {\n    msg.payload = \"Temperature data not available\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "5e62e1a55983c727"
            ]
        ]
    },
    {
        "id": "3561bfda06ded470",
        "type": "inject",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "ac7bfc9f155132e8"
            ]
        ]
    },
    {
        "id": "cdf1ba1f84cd0f0c",
        "type": "function",
        "z": "4e6f89cca2b81b4f",
        "name": "Get Outside Hum",
        "func": "// Extract the humidity from the payload\nif (msg.payload && msg.payload.days && msg.payload.days.length > 0) {\n    const todayWeather = msg.payload.days[0];\n    msg.payload = todayWeather.humidity + \" %\"; // Assuming 'humidity' is stored under the 'humidity' key\n} else {\n    msg.payload = \"Humidity data not available\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            [
                "2475578edc620b20"
            ]
        ]
    },
    {
        "id": "5e62e1a55983c727",
        "type": "ui_gauge",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 4,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Outside Temperature",
        "label": "Celcius",
        "format": "{{value}}°C",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 760,
        "y": 460,
        "wires": []
    },
    {
        "id": "2475578edc620b20",
        "type": "ui_gauge",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 10,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Outside Humidity",
        "label": "Percentage",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "780158f5e212c3b2",
        "type": "function",
        "z": "4e6f89cca2b81b4f",
        "name": "Time",
        "func": "function addZero(i) {\n  return (i < 10) ? \"0\" + i : i;\n}\n\nvar now = new Date();\nvar hours = addZero(now.getHours());\nvar minutes = addZero(now.getMinutes());\nvar seconds = addZero(now.getSeconds());\nvar formattedTime = hours + \":\" + minutes + \":\" + seconds;\n\nmsg.payload = formattedTime;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "a578163772818253"
            ]
        ]
    },
    {
        "id": "613cc4d92aa26111",
        "type": "inject",
        "z": "4e6f89cca2b81b4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "780158f5e212c3b2"
            ]
        ]
    },
    {
        "id": "a578163772818253",
        "type": "ui_text",
        "z": "4e6f89cca2b81b4f",
        "group": "a2ec76bb0a0e5972",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "50",
        "color": "#000000",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "cb0d5400f5bde1c1",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ee420c9a6204830a",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "5c1a7e9f3a4d520f",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3ad7199a8a4bd52",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "c282a62712a7f456",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b234bc5608e2a6c",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "c42817aa6532fd21",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "1373a2cbe194d580",
        "type": "ui_spacer",
        "z": "4e6f89cca2b81b4f",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac1ec762555769ad",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a2ec76bb0a0e5972",
        "type": "ui_group",
        "name": "Inside & Outside Conditions",
        "tab": "710790bd355ac1a3",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "710790bd355ac1a3",
        "type": "ui_tab",
        "name": "Temperature and Humidity Monitoring",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]