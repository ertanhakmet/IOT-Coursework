[
    {
        "id": "b82567353e68fab8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65182bd6c6f10ee0",
        "type": "ui_gauge",
        "z": "b82567353e68fab8",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 2,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Home Temperature",
        "label": "Celcius",
        "format": "{{value}}",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "3829bddd38fabaed",
        "type": "ui_gauge",
        "z": "b82567353e68fab8",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 8,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Home Humidity",
        "label": "Percentage",
        "format": "{{value}}%",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "8ec60903fc1578b2",
        "type": "mqtt in",
        "z": "b82567353e68fab8",
        "name": "",
        "topic": "home/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac1ec762555769ad",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 200,
        "wires": [
            [
                "4fd0a8da17df072b",
                "fba26498a84a1b29"
            ]
        ]
    },
    {
        "id": "fba26498a84a1b29",
        "type": "function",
        "z": "b82567353e68fab8",
        "name": "Extract Humidity",
        "func": "// Assuming the message payload is a parsed JavaScript object\nlet humidity = msg.payload.humidity;  // Extract the temperature property\n\n// Prepare the output message with the extracted temperature\nmsg.payload = humidity;\n\nreturn msg; // Return the message to be used by the next node\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "3829bddd38fabaed"
            ]
        ]
    },
    {
        "id": "4fd0a8da17df072b",
        "type": "function",
        "z": "b82567353e68fab8",
        "name": "Extract Temperature",
        "func": "// Assuming the message payload is a parsed JavaScript object\nlet temperature = msg.payload.temperature;  // Extract the temperature property\n\n// Prepare the output message with the extracted temperature\nmsg.payload = temperature;\n\nreturn msg; // Return the message to be used by the next node\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "65182bd6c6f10ee0"
            ]
        ]
    },
    {
        "id": "2526a50bf4efcd38",
        "type": "http request",
        "z": "b82567353e68fab8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/LIverpool?unitGroup=uk&include=hours%2Cdays%2Ccurrent%2Cevents&key=QLCGU5SZTNBG48WCDFPSSWDWR&contentType=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "360b03c5a4536ac4",
                "891c4eda1c4e6ff4"
            ]
        ]
    },
    {
        "id": "360b03c5a4536ac4",
        "type": "function",
        "z": "b82567353e68fab8",
        "name": "Get Outside Temp",
        "func": "// Extract the temperature from the payload\nif (msg.payload && msg.payload.days && msg.payload.days.length > 0) {\n    const todayWeather = msg.payload.days[0];\n    msg.payload = todayWeather.temp + \" °C\";\n} else {\n    msg.payload = \"Temperature data not available\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "942b46fc41646a3c"
            ]
        ]
    },
    {
        "id": "b75e1f64870364ae",
        "type": "inject",
        "z": "b82567353e68fab8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "2526a50bf4efcd38"
            ]
        ]
    },
    {
        "id": "891c4eda1c4e6ff4",
        "type": "function",
        "z": "b82567353e68fab8",
        "name": "Get Outside Hum",
        "func": "// Extract the humidity from the payload\nif (msg.payload && msg.payload.days && msg.payload.days.length > 0) {\n    const todayWeather = msg.payload.days[0];\n    msg.payload = todayWeather.humidity + \" %\"; // Assuming 'humidity' is stored under the 'humidity' key\n} else {\n    msg.payload = \"Humidity data not available\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": [
            [
                "8dfc8fc3e47f4bbb"
            ]
        ]
    },
    {
        "id": "942b46fc41646a3c",
        "type": "ui_gauge",
        "z": "b82567353e68fab8",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 4,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Outside Temperature",
        "label": "Celcius",
        "format": "{{value}}°C",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 740,
        "y": 360,
        "wires": []
    },
    {
        "id": "8dfc8fc3e47f4bbb",
        "type": "ui_gauge",
        "z": "b82567353e68fab8",
        "name": "",
        "group": "a2ec76bb0a0e5972",
        "order": 10,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Outside Humidity",
        "label": "Percentage",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "fad91505755c1b98",
        "type": "function",
        "z": "b82567353e68fab8",
        "name": "Time",
        "func": "function addZero(i) {\n  return (i < 10) ? \"0\" + i : i;\n}\n\nvar now = new Date();\nvar hours = addZero(now.getHours());\nvar minutes = addZero(now.getMinutes());\nvar seconds = addZero(now.getSeconds());\nvar formattedTime = hours + \":\" + minutes + \":\" + seconds;\n\nmsg.payload = formattedTime;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "9f5eadfd3c66cb87"
            ]
        ]
    },
    {
        "id": "a3fbb3c13d5d676e",
        "type": "inject",
        "z": "b82567353e68fab8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "fad91505755c1b98"
            ]
        ]
    },
    {
        "id": "9f5eadfd3c66cb87",
        "type": "ui_text",
        "z": "b82567353e68fab8",
        "group": "a2ec76bb0a0e5972",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "50",
        "color": "#000000",
        "x": 490,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd78a7b22167813c",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5b7b9c3dbca1b5b",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "694a9adcbb835892",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d54675624182f20",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec57109437701dbf",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "a7bdd7097ca9e046",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "206bea91321d169c",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f4422e0a2777f43",
        "type": "ui_spacer",
        "z": "b82567353e68fab8",
        "name": "spacer",
        "group": "a2ec76bb0a0e5972",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "a2ec76bb0a0e5972",
        "type": "ui_group",
        "name": "Inside & Outside Conditions",
        "tab": "710790bd355ac1a3",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ac1ec762555769ad",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "710790bd355ac1a3",
        "type": "ui_tab",
        "name": "Temperature and Humidity Monitoring",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]